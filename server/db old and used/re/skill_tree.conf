//====================================================
//=       _   _                     _           
//=      | | | |                   | |          
//=      | |_| | ___ _ __ ___ _   _| | ___  ___ 
//=      |  _  |/ _ \ '__/ __| | | | |/ _ \/ __|
//=      | | | |  __/ | | (__| |_| | |  __/\__ \
//=      \_| |_/\___|_|  \___|\__,_|_|\___||___/
//=                                                  
//=            http://hercules.ws/board/                        
//================= More Information =================
// http://hercules.ws/board/topic/1188-skill-tree-db-redesign/
//================ Structure Example =================
/*
Job_Name: { // Job names as in src/map/pc.c (they are hardcoded at the moment so if you want to add a new job you should add it there)
	inherit: ( "Other_Job_Name" ); // Base job from which this job will inherit its skill tree. NV_TRICKDEAD inheritance is skipped for non-novices from the source 

	skills: { // SKILL_NAMEs come from the Name (16th column) value in db/re/skill_db.txt 
		SKILL_NAME1: Max_Level // Use this for skills that don't have other skill prerequisite; Max_Level is a numeric value that should match your client side files 
		SKILL_NAME2: { // Use this for skills which have other skills as prerequisites 
			MaxLevel: Max_Level // Max_Level is a numeric value that should match your client side files 
			SKILL_NAME_PREREQUISITE: Level_Prerequisite // The prerequisite skill and min level for having this skill available. Should also match your client side files 
			SKILL_NAME_PREREQUISITE2: Level_Prerequisite2 // You can add as many prerequisite skills as you want. Minimum of 1 if you add a skill this way
	}
}
*/
//====================================================

Novice: {
	skills: { 
		NV_BASIC: 9
	}
}
Swordsman: {
	inherit: ( "Novice" );
}
Magician: {
	inherit: ( "Novice" );
}
Archer: {
	inherit: ( "Novice" );
}
Acolyte: {
	inherit: ( "Novice" );
}
Merchant: {
	inherit: ( "Novice" );
}
Thief: {
	inherit: ( "Novice" );
}
Knight: {
	inherit: ( "Novice" );
}
Priest: {
	inherit: ( "Novice" );
}
Wizard: {
	inherit: ( "Novice" );
}
Blacksmith: {
	inherit: ( "Novice" );
}
Hunter: {
	inherit: ( "Novice" );
}
Assassin: {
	inherit: ( "Novice" );
}
Crusader: {
	inherit: ( "Novice" );
}
Monk: {
	inherit: ( "Novice" );
}
Sage: {
	inherit: ( "Novice" );
}
Rogue: {
	inherit: ( "Novice" );
}
Alchemist: {
	inherit: ( "Novice" );
}
Bard: {
	inherit: ( "Novice" );
}
Dancer: {
	inherit: ( "Novice" );
}
Super_Novice: {
	inherit: ( "Novice" );
}
Gunslinger: {
	inherit: ( "Novice" );
}
Ninja: {
	inherit: ( "Novice" );
}
Novice_High: {
	inherit: ( "Novice" );	
}
Swordsman_High: {
	inherit: ( "Novice" );
}
Magician_High: {
	inherit: ( "Novice" );
}
Archer_High: {
	inherit: ( "Novice" );
}
Acolyte_High: {
	inherit: ( "Novice" );
}
Merchant_High: {
	inherit: ( "Novice" );
}
Thief_High: {
	inherit: ( "Novice" );
}
Lord_Knight: {
	inherit: ( "Novice" );
}
High_Priest: {
	inherit: ( "Novice" );
}
High_Wizard: {
	inherit: ( "Novice" );
}
Whitesmith: {
	inherit: ( "Novice" );
}
Sniper: {
	inherit: ( "Novice" );
}
Assassin_Cross: {
	inherit: ( "Novice" );
}
Paladin: {
	inherit: ( "Novice" );
}
Champion: {
	inherit: ( "Novice" );
}
Professor: {
	inherit: ( "Novice" );
}
Stalker: {
	inherit: ( "Novice" );
}
Creator: {
	inherit: ( "Novice" );
}
Clown: {
	inherit: ( "Novice" );
}
Gypsy: {
	inherit: ( "Novice" );
}
Baby_Novice: {
	inherit: ( "Novice" );
}
Baby_Swordsman: {
	inherit: ( "Novice" );
}
Baby_Magician: {
	inherit: ( "Novice" );
}
Baby_Archer: {
	inherit: ( "Novice" );
}
Baby_Acolyte: {
	inherit: ( "Novice" );
}
Baby_Merchant: {
	inherit: ( "Novice" );
}
Baby_Thief: {
	inherit: ( "Novice" );
}
Baby_Knight: {
	inherit: ( "Novice" );
}
Baby_Priest: {
	inherit: ( "Novice" );
}
Baby_Wizard: {
	inherit: ( "Novice" );
}
Baby_Blacksmith: {
	inherit: ( "Novice" );
}
Baby_Hunter: {
	inherit: ( "Novice" );
}
Baby_Assassin: {
	inherit: ( "Novice" );
}
Baby_Crusader: {
	inherit: ( "Novice" );
}
Baby_Monk: {
	inherit: ( "Novice" );
}
Baby_Sage: {
	inherit: ( "Novice" );
}
Baby_Rogue: {
	inherit: ( "Novice" );
}
Baby_Alchemist: {
	inherit: ( "Novice" );
}
Baby_Bard: {
	inherit: ( "Novice" );
}
Baby_Dancer: {
	inherit: ( "Novice" );
}
Super_Baby: {
	inherit: ( "Novice" );
}
Taekwon: {
	inherit: ( "Novice" );
}
Star_Gladiator: {
	inherit: ( "Novice" );
}
Soul_Linker: {
	inherit: ( "Novice" );
}
Gangsi: {
	inherit: ( "Novice" );
}
Death_Knight: {
	inherit: ( "Novice" );
}
Dark_Collector: {
	inherit: ( "Novice" );
}
Rune_Knight: {
	inherit: ( "Novice" );
}
Warlock: {
	inherit: ( "Novice" );
}
Ranger: {
	inherit: ( "Novice" );
}
Arch_Bishop:  {
	inherit: ( "Novice" );
}
Mechanic:  {
	inherit: ( "Novice" );
}
Guillotine_Cross: {
	inherit: ( "Novice" );
}
Rune_Knight_Trans: {
	inherit: ( "Novice" );
}
Warlock_Trans: {
	inherit: ( "Novice" );
}
Ranger_Trans: {
	inherit: ( "Novice" );
}
Arch_Bishop_Trans: {
	inherit: ( "Novice" );
}
Mechanic_Trans: {
	inherit: ( "Novice" );
}
Guillotine_Cross_Trans: {
	inherit: ( "Novice" );
}
Royal_Guard: {
	inherit: ( "Novice" );
}
Sorcerer: {
	inherit: ( "Novice" );
}
Minstrel: {
	inherit: ( "Novice" );
}
Wanderer: {
	inherit: ( "Novice" );
}
Sura: {
	inherit: ( "Novice" );
}
Genetic: {
	inherit: ( "Novice" );
}
Shadow_Chaser: {
	inherit: ( "Novice" );
}
Royal_Guard_Trans: {
	inherit: ( "Novice" );
}
Sorcerer_Trans: {
	inherit: ( "Novice" );
}
Minstrel_Trans: {
	inherit: ( "Novice" );
}
Wanderer_Trans: {
	inherit: ( "Novice" );
}
Sura_Trans: {
	inherit: ( "Novice" );
}
Genetic_Trans: {
	inherit: ( "Novice" );
}
Shadow_Chaser_Trans: {
	inherit: ( "Novice" );
}
Baby_Rune_Knight: {
	inherit: ( "Novice" );
}
Baby_Warlock: {
	inherit: ( "Novice" );
}
Baby_Ranger: {
	inherit: ( "Novice" );
}
Baby_Arch_Bishop: {
	inherit: ( "Novice" );
}
Baby_Mechanic: {
	inherit: ( "Novice" );
}
Baby_Guillotine_Cross: {
	inherit: ( "Novice" );
}
Baby_Royal_Guard: {
	inherit: ( "Novice" );
}
Baby_Sorcerer: {
	inherit: ( "Novice" );
}
Baby_Minstrel: {
	inherit: ( "Novice" );
}
Baby_Wanderer: {
	inherit: ( "Novice" );
}
Baby_Sura: {
	inherit: ( "Novice" );
}
Baby_Genetic: {
	inherit: ( "Novice" );
}
Baby_Shadow_Chaser: {
	inherit: ( "Novice" );
}
Expanded_Super_Novice: {
	inherit: ( "Novice" );
}
Expanded_Super_Baby: {
	inherit: ( "Novice" );
}
Kagerou: {
	inherit: ( "Novice" );
}
Oboro: {
	inherit: ( "Novice" );
}
Rebellion: {
	inherit: ( "Novice" );
}
